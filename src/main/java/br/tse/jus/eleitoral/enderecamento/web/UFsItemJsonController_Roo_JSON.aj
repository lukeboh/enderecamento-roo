// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.tse.jus.eleitoral.enderecamento.web;

import br.tse.jus.eleitoral.enderecamento.dominio.UF;
import br.tse.jus.eleitoral.enderecamento.service.api.UFService;
import br.tse.jus.eleitoral.enderecamento.web.UFsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect UFsItemJsonController_Roo_JSON {
    
    declare @type: UFsItemJsonController: @RestController;
    
    declare @type: UFsItemJsonController: @RequestMapping(value = "/api/ufs/{uF}", name = "UFsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param uFService
     */
    @Autowired
    public UFsItemJsonController.new(UFService uFService) {
        this.uFService = uFService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return UF
     */
    @ModelAttribute
    public UF UFsItemJsonController.getUF(@PathVariable("uF") Long id) {
        UF uF = uFService.findOne(id);
        if (uF == null) {
            throw new NotFoundException(String.format("UF with identifier '%s' not found",id));
        }
        return uF;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param uF
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> UFsItemJsonController.show(@ModelAttribute UF uF) {
        return ResponseEntity.ok(uF);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param uF
     * @return UriComponents
     */
    public static UriComponents UFsItemJsonController.showURI(UF uF) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(UFsItemJsonController.class).show(uF))
            .buildAndExpand(uF.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedUF
     * @param uF
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> UFsItemJsonController.update(@ModelAttribute UF storedUF, @Valid @RequestBody UF uF, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        uF.setId(storedUF.getId());
        getUFService().save(uF);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param uF
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> UFsItemJsonController.delete(@ModelAttribute UF uF) {
        getUFService().delete(uF);
        return ResponseEntity.ok().build();
    }
    
}
