// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.tse.jus.eleitoral.enderecamento.service.impl;

import br.tse.jus.eleitoral.enderecamento.dominio.UF;
import br.tse.jus.eleitoral.enderecamento.repository.UFRepository;
import br.tse.jus.eleitoral.enderecamento.service.impl.UFServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect UFServiceImpl_Roo_Service_Impl {
    
    declare @type: UFServiceImpl: @Service;
    
    declare @type: UFServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private UFRepository UFServiceImpl.uFRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param uFRepository
     */
    @Autowired
    public UFServiceImpl.new(UFRepository uFRepository) {
        setUFRepository(uFRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return UFRepository
     */
    public UFRepository UFServiceImpl.getUFRepository() {
        return uFRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param uFRepository
     */
    public void UFServiceImpl.setUFRepository(UFRepository uFRepository) {
        this.uFRepository = uFRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param uF
     */
    @Transactional
    public void UFServiceImpl.delete(UF uF) {
        getUFRepository().delete(uF);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<UF> UFServiceImpl.save(Iterable<UF> entities) {
        return getUFRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void UFServiceImpl.delete(Iterable<Long> ids) {
        List<UF> toDelete = getUFRepository().findAll(ids);
        getUFRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return UF
     */
    @Transactional
    public UF UFServiceImpl.save(UF entity) {
        return getUFRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return UF
     */
    public UF UFServiceImpl.findOne(Long id) {
        return getUFRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return UF
     */
    public UF UFServiceImpl.findOneForUpdate(Long id) {
        return getUFRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<UF> UFServiceImpl.findAll(Iterable<Long> ids) {
        return getUFRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<UF> UFServiceImpl.findAll() {
        return getUFRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long UFServiceImpl.count() {
        return getUFRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<UF> UFServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getUFRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<UF> UFServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getUFRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<UF> UFServiceImpl.getEntityType() {
        return UF.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> UFServiceImpl.getIdType() {
        return Long.class;
    }
    
}
